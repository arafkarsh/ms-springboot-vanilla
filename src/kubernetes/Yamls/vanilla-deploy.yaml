# Vanilla MicroService Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vanilla-deployment
  labels:
    app: vanilla-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      # Matching the labels from Pod MetaData,  Multiple labels can be used
      app: vanilla-pod
  minReadySeconds: 5
  strategy:
    # Re-Create / Rolling Update
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: vanilla-pod
        version: "1.0.0"
        release: stable
        organization: Ozazo
    spec:
      # Restart Policy = Always / OnFailure / Never
      restartPolicy: Always
      # Container Definition
      containers:
        - name: vanilla-container
          image: arafkarsh/ms-vanilla-service:0.3.4-alpaquita-21-k8s
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9334
          # Spring Profiles (Application Properties)
          volumeMounts:
            - name: config-volume
              mountPath: /config
              readOnly: true
          # Environment Variables
          env:
            - name: JASYPT_ENCRYPTOR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vanilla-secret
                  key: JASYPT_ENCRYPTOR
            - name: SPRING_CONFIG_LOCATION
              value: "file:/config/application.properties"
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: vanilla-configmap-active
                  key: spring.profiles.active
          # Liveness Probe - Health Check
          livenessProbe:
            httpGet:
              path: /ms-vanilla/api/v1/service/live
              port: 9334
            initialDelaySeconds: 60    # Give the application enough time to fully start before health checks begin.
            periodSeconds: 15          # Check frequently (every 15 seconds) to quickly catch hangs or deadlocks.
            timeoutSeconds: 5          # Allow up to 5 seconds for a response—sufficient for most HTTP endpoints.
            successThreshold: 1        # One successful check is enough to mark the container as healthy.
            failureThreshold: 3        # After 3 consecutive failures, Kubernetes will restart the container.
          # Readiness Probe - Ready Check
          readinessProbe:
            httpGet:
              path: /ms-vanilla/api/v1/service/ready
              port: 9334
            initialDelaySeconds: 30    # Start readiness checks sooner so the pod can be added to service endpoints as soon as it’s capable.
            periodSeconds: 15          # Frequent checks (every 15 seconds) to quickly reflect the pod’s ability to serve traffic.
            timeoutSeconds: 5          # Use the same 5-second window to allow for any transient delays.
            successThreshold: 1        # One success confirms the pod is ready.
            failureThreshold: 3        # After 3 failures, the pod is marked as unready and removed from the load balancer.
          # Resource Limits
          resources:
            # QoS: [Burstable] / Guaranteed / BestEffort
            requests:
              cpu: 50m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 382Mi
      # Volumes - Profile ConfigMap  (Contains Application Properties
      volumes:
        - name: config-volume
          configMap:
            name: vanilla-configmap-profiles
