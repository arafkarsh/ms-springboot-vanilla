apiVersion: v1
data:
  application-prod.properties: |+
    server.port=9334
    logging.level.root=INFO
    spring.config.activate.on-profile=prod
    db.server=host.docker.internal
    db.port=5433
    db.name=ms_vanilla_334
    db.schema=ms_schema
    db.vendor=PostgreSQL
    spring.datasource.url=jdbc:postgresql://${db.server}:${db.port}/${db.name}
    spring.datasource.driverClassName=org.postgresql.ds.PGSimpleDataSource
    spring.datasource.username=msadm
    spring.datasource.password=ENC(In0ZYcoLjwe2OzzaWZ07BMoFHL8yvo4KQ/3ABAbzSKJuUVEu5hYycNGWB66Xswju)
    spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
    spring.datasource.hikari.connection-test-query=SELECT 1


  application.properties: |
    build.number=219
    build.date=Fri Jan 31 14:07:45 IST 2025
    spring.profiles.default=dev
    service.org=arafkarsh
    service.name=MS-Vanilla
    service.api.name=ms-vanilla
    service.api.prefix=api
    service.api.version=v1
    service.api.error.prefix=13
    service.container=ms-vanilla-service
    service.api.repository=https://github.com/arafkarsh/ms-springboot-334-vanilla
    service.api.path=/${service.api.name}/${service.api.prefix}/${service.api.version}
    service.url=http://www.arafkarsh.com/
    service.license=Apache 2 License
    service.license.url=https://github.com/arafkarsh/ms-springboot-334-vanilla?tab=Apache-2.0-1-ov-file
    server.port=9334
    server.version=0.3.4
    server.restart=false
    server.leak.test=3
    server.resources.url=${service.url}${service.api.path}
    server.api.url.print=true
    server.crypto.public.key=publicKey.pem
    server.crypto.private.key=privateKey.pem
    server.token.issuer=${service.org}
    server.token.type=1
    server.token.test=true
    server.token.auth.expiry=600000
    server.token.refresh.expiry=3600000
    server.token.key=<([1234567890SecretKey!!To??Encrypt##Data@12345%6790])>
    server.secure.data.key=<([1234567890SecretKEY!!TO??Encrypt##DATA@12345%6790])>
    server.keycloak.url=http://localhost:8080/realms/Fusion-Air/protocol/openid-connect/token
    server.keycloak.certs=http://localhost:8080/realms/Fusion-Air/protocol/openid-connect/certs
    server.keycloak.clientId=fusion-air-user-service
    server.keycloak.secret=2AGe7XxP8evCmhdjD3cmgpE23y0g6PGU
    server.keycloak.grantType=password
    server.keycloak.publicKey=publicKey.KeyCloak.pem
    server.keycloak.issuer=http://localhost:8080/realms/Fusion-Air
    server.keycloak.enabled=false
    server.host=localhost
    server.host.dev=http://localhost:${server.port}
    server.host.dev.desc=Development Server
    server.host.uat=https://uat.${service.org}.com
    server.host.uat.desc=UAT Server
    server.host.prod=https://prod.${service.org}.com
    server.host.prod.desc=Production Server
    server.error.whitelabel.enabled=true
    server.vulnerability.demos.allowed=false
    spring.codec.max-in-memory-size=3MB
    app.property.product=fusion.air.product
    app.property.product.list=/create, /status, /all/secured, /search/product, /search/price, /search/active, /deactivate, /activate, /update, /update/price, /update/details, /delete
    app.property.list=element1, element2, element3
    app.property.map={key1:'val1', key2 : 'val2', key3 : 'val3'}
    logging.group.tomcat=org.apache.catalina, org.apache.coyote, org.apache.tomcat
    logging.level.org.springframework.boot.web.servlet=INFO
    logging.level.org.springframework.web.servlet.DispatcherServlet=INFO
    logging.level.org.springframework.security.web.FilterChainProxy=INFO
    logging.level.web=INFO
    logging.level.sql=INFO
    logging.level.tomcat=INFO
    logging.level.root=INFO
    logging.config=classpath:logback-spring.xml
    logging.format=plain
    logging.path=/tmp/logs/${service.api.name}
    logging.file.name=${service.api.name}.v${server.version}
    logging.pattern.rolling-file-name=${logging.path}/${logging.file.name}-%d{yyyy-MM-dd}-%i
    logging.file.max-size=10MB
    logging.file.max-history=100
    logging.file.total-size-cap=3GB
    springdoc.show-actuator=true
    management.endpoints.web.exposure.include=health,metrics,prometheus,info
    management.endpoint.health.enabled=true
    management.endpoint.metrics.enabled=true
    management.endpoint.prometheus.enabled=true
    management.metrics.export.prometheus.enabled=true
    management.metrics.enable.jvm=false
    management.metrics.enable.jvm.gc=false
    management.metrics.enable.datasource=false
    otel.propagators=tracecontext
    otel.resource.attributes.deployment.environment=dev
    otel.resource.attributes.service.name=ms-vanilla
    otel.resource.attributes.service.namespace=shopping
    otel.javaagent.debug=true
    otel.service.name=${service.container}
    otel.exporter.otlp.endpoint=http://localhost:4318
    otel.traces.exporter=none
    otel.metrics.exporter=none
    otel.logs.exporter=none
    otel.instrumentation.common.default-enabled=false
    otel.instrumentation.jdbc.enabled=false
    otel.instrumentation.logback-mdc.enabled=true
    otel.instrumentation.spring-web.enabled=true
    otel.instrumentation.spring-webmvc.enabled=true
    otel.instrumentation.micrometer.enabled=true
    otel.instrumentation.kafka.enabled=false
    otel.instrumentation.mongo.enabled=false
    jasypt.encryptor.password=${JASYPT_ENCRYPTOR_PASSWORD}
    jasypt.encryptor.algorithm=PBEWithHmacSHA512AndAES_256
    jasypt.encryptor.iv-generator-classname=org.jasypt.iv.RandomIvGenerator
    jasypt.encryptor.salt-generator-classname=org.jasypt.salt.RandomSaltGenerator
    db.server=mem
    db.port=5432
    db.name=ms_cache
    db.schema=ms_schema
    db.vendor=H2
    spring.datasource.url=jdbc:h2:${db.server}:${db.name};DB_CLOSE_ON_EXIT=FALSE
    spring.datasource.driverClassName=org.h2.Driver
    spring.datasource.username=sa
    spring.datasource.password=ENC(lA6JCEpK7+wuHDpB1A41DOUfn6L74DQxaazXLTjyQHY5/X6CONfUEyDt6erWifrN)
    spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
    spring.datasource.hikari.connection-test-query=SELECT 1
    spring.jpa.show-sql=true
    spring.jpa.defer-datasource-initialization=true
    spring.jpa.hibernate.ddl-auto=create-drop
    spring.jpa.properties.hibernate.format_sql=true
    spring.jpa.properties.hibernate.validator.apply_to_ddl=false
    remote.host=127.0.0.1
    remote.port=8080
    remote.protocol=http
    springdoc.api-docs.path=${service.api.path}
    springdoc.swagger-ui.path=${service.api.path}/swagger-ui.html
    springdoc.swagger-ui.tryItOutEnabled=true
    springdoc.swagger-ui.filter=true
    springdoc.swagger-ui.use-root-path=true
    springdoc.swagger-ui.disable-swagger-default-url=true
    server.forward-headers-strategy=framework
    springdoc.cache.disabled=true
    springdoc.writer-with-default-pretty-printer=true
    springdoc.api-docs.enabled=true
    springdoc.swagger-ui.operationsSorter=method
    springdoc.swagger-ui.tagsSorter=alpha
kind: ConfigMap
metadata:
  name: vanilla-configmap-prod
